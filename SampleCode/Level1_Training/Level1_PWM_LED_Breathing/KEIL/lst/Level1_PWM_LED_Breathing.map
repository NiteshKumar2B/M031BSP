Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Small function inlining results

Inlined function __aeabi_idiv0 from aeabi_idiv0.o at offset 0x1ee in aeabi_sdivfast.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from aeabi_idiv0.o at offset 0x1f0 in aeabi_sdivfast.o(.text_divfast).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from aeabi_idiv0.o at offset 0xc in aeabi_sdivfast_div0.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from aeabi_idiv0.o at offset 0x204 in aeabi_sdivfast_div0.o(.text).
Inlined Instruction: BX       lr
Inlined function __aeabi_idiv0 from aeabi_idiv0.o at offset 0x1f0 in aeabi_sdivfast_div0.o(.text_divfast).
Inlined Instruction: BX       lr
Inlined function _platform_pre_stackheap_init from boardinit1.o at offset 0x0 in __rtentry2.o(.ARM.Collect$$rtentry$$00000001).
Inlined Instruction: BX       lr
Inlined function _fp_init from fpinit.o at offset 0x0 in libinit2.o(.ARM.Collect$$libinit$$00000001).
Inlined Instruction: BX       lr
Inlined function _platform_pre_lib_shutdown from boardshut.o at offset 0x0 in rtexit2.o(.ARM.Collect$$rtexit$$00000001).
Inlined Instruction: BX       lr
Inlined function __ARM_get_argv from no_argv.o at offset 0x2 in argv_veneer.o(.text).
Inlined Instruction: BX       lr
Inlined total of 9 calls.

==============================================================================

Section Cross References

    startup_m031series.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_m031series.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_m031series.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_m031series.o(RESET) refers to startup_m031series.o(STACK) for __initial_sp
    startup_m031series.o(RESET) refers to startup_m031series.o(.text) for Reset_Handler
    startup_m031series.o(RESET) refers to main.o(.text.PWM1_IRQHandler) for PWM1_IRQHandler
    startup_m031series.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_m031series.o(.text) refers to system_m031series.o(.text.SystemInit) for SystemInit
    startup_m031series.o(.text) refers to __main.o(!!!main) for __main
    startup_m031series.o(.text) refers to retarget.o(.text.ProcessHardFault) for ProcessHardFault
    startup_m031series.o(.text) refers to startup_m031series.o(HEAP) for Heap_Mem
    startup_m031series.o(.text) refers to startup_m031series.o(STACK) for Stack_Mem
    startup_m031series.o(.text) refers to retarget.o(.text.SH_Return) for SH_Return
    system_m031series.o(.text.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    system_m031series.o(.text.SystemCoreClockUpdate) refers to system_m031series.o(.data.PllClock) for PllClock
    system_m031series.o(.text.SystemCoreClockUpdate) refers to system_m031series.o(.rodata.gau32ClkSrcTbl) for gau32ClkSrcTbl
    system_m031series.o(.text.SystemCoreClockUpdate) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    system_m031series.o(.text.SystemCoreClockUpdate) refers to system_m031series.o(.data.CyclesPerUs) for CyclesPerUs
    system_m031series.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_m031series.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_m031series.o(.ARM.exidx.text.SystemInit) refers to system_m031series.o(.text.SystemInit) for [Anonymous Symbol]
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_EnableXtalRC) for CLK_EnableXtalRC
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_WaitClockReady) for CLK_WaitClockReady
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_SetHCLK) for CLK_SetHCLK
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_EnableModuleClock) for CLK_EnableModuleClock
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_EnablePLL) for CLK_EnablePLL
    main.o(.text.SYS_Init) refers to clk.o(.text.CLK_SetModuleClock) for CLK_SetModuleClock
    main.o(.text.SYS_Init) refers to sys.o(.text.SYS_ResetModule) for SYS_ResetModule
    main.o(.text.SYS_Init) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.ARM.exidx.text.SYS_Init) refers to main.o(.text.SYS_Init) for [Anonymous Symbol]
    main.o(.text.PWM_Init) refers to pwm.o(.text.PWM_EnableOutput) for PWM_EnableOutput
    main.o(.text.PWM_Init) refers to pwm.o(.text.PWM_EnablePeriodInt) for PWM_EnablePeriodInt
    main.o(.text.PWM_Init) refers to pwm.o(.text.PWM_Start) for PWM_Start
    main.o(.ARM.exidx.text.PWM_Init) refers to main.o(.text.PWM_Init) for [Anonymous Symbol]
    main.o(.text.PWM1_IRQHandler) refers to pwm.o(.text.PWM_ClearPeriodIntFlag) for PWM_ClearPeriodIntFlag
    main.o(.text.PWM1_IRQHandler) refers to main.o(.data.g_u8Forward) for g_u8Forward
    main.o(.text.PWM1_IRQHandler) refers to main.o(.bss.g_u32BreathingCount) for g_u32BreathingCount
    main.o(.ARM.exidx.text.PWM1_IRQHandler) refers to main.o(.text.PWM1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.SYS_Init) for SYS_Init
    main.o(.text.main) refers to pwm.o(.text.PWM_EnableOutput) for PWM_EnableOutput
    main.o(.text.main) refers to pwm.o(.text.PWM_EnablePeriodInt) for PWM_EnablePeriodInt
    main.o(.text.main) refers to pwm.o(.text.PWM_Start) for PWM_Start
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SH_Return) refers to retarget.o(.text.SH_Return) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to puts.o(.text) for puts
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.data.g_ICE_Conneced) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ProcessHardFault) refers to retarget.o(.text.ProcessHardFault) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar_ToUART) refers to retarget.o(.text.SendChar_ToUART) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar) refers to retarget.o(.text.SendChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.GetChar) refers to retarget.o(.text.GetChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.kbhit) refers to retarget.o(.text.kbhit) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.IsDebugFifoEmpty) refers to retarget.o(.text.IsDebugFifoEmpty) for [Anonymous Symbol]
    retarget.o(.text._ttywrch) refers to retarget.o(.text.SendChar) for SendChar
    retarget.o(.ARM.exidx.text._ttywrch) refers to retarget.o(.text._ttywrch) for [Anonymous Symbol]
    retarget.o(.text.fputc) refers to retarget.o(.text.SendChar) for SendChar
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ferror) refers to retarget.o(.text.ferror) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableCKO) refers to clk.o(.text.CLK_DisableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableCKO) refers to clk.o(.text.CLK_EnableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_PowerDown) refers to clk.o(.text.CLK_PowerDown) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_Idle) refers to clk.o(.text.CLK_Idle) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetHXTFreq) refers to clk.o(.text.CLK_GetHXTFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetLXTFreq) refers to clk.o(.text.CLK_GetLXTFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_GetPCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_GetPCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetHCLKFreq) refers to clk.o(.text.CLK_GetHCLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetCPUFreq) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetCPUFreq) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetCPUFreq) refers to clk.o(.text.CLK_GetCPUFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(.text.CLK_SetCoreClock) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetCoreClock) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetCoreClock) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockReady) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_WaitClockReady) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_WaitClockReady) refers to clk.o(.text.CLK_WaitClockReady) for [Anonymous Symbol]
    clk.o(.text.CLK_EnablePLL) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_EnablePLL) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_EnablePLL) refers to clk.o(.text.CLK_EnablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_SetHCLK) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_SetHCLK) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetHCLK) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_SetHCLK) refers to clk.o(.text.CLK_SetHCLK) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetModuleClock) refers to clk.o(.text.CLK_SetModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc) refers to clk.o(.text.CLK_SetSysTickClockSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableXtalRC) refers to clk.o(.text.CLK_EnableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableXtalRC) refers to clk.o(.text.CLK_DisableXtalRC) for [Anonymous Symbol]
    clk.o(.text.CLK_EnableModuleClock) refers to clk.o(.rodata..L__const.CLK_DisableModuleClock.u32ClkTbl) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableModuleClock) refers to clk.o(.text.CLK_EnableModuleClock) for [Anonymous Symbol]
    clk.o(.text.CLK_DisableModuleClock) refers to clk.o(.rodata..L__const.CLK_DisableModuleClock.u32ClkTbl) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableModuleClock) refers to clk.o(.text.CLK_DisableModuleClock) for [Anonymous Symbol]
    clk.o(.text.CLK_DisablePLL) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_DisablePLL) refers to system_m031series.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_DisablePLL) refers to clk.o(.text.CLK_DisablePLL) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSysTick) refers to clk.o(.text.CLK_EnableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableSysTick) refers to clk.o(.text.CLK_DisableSysTick) for [Anonymous Symbol]
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    pwm.o(.text.PWM_ConfigCaptureChannel) refers to pwm.o(.rodata.cst4) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ConfigCaptureChannel) refers to pwm.o(.text.PWM_ConfigCaptureChannel) for [Anonymous Symbol]
    pwm.o(.text.PWM_ConfigOutputChannel) refers to system_m031series.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    pwm.o(.text.PWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    pwm.o(.text.PWM_ConfigOutputChannel) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    pwm.o(.text.PWM_ConfigOutputChannel) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    pwm.o(.text.PWM_ConfigOutputChannel) refers to pwm.o(.rodata.cst4) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ConfigOutputChannel) refers to pwm.o(.text.PWM_ConfigOutputChannel) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_Start) refers to pwm.o(.text.PWM_Start) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_Stop) refers to pwm.o(.text.PWM_Stop) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ForceStop) refers to pwm.o(.text.PWM_ForceStop) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableADCTrigger) refers to pwm.o(.text.PWM_EnableADCTrigger) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableADCTrigger) refers to pwm.o(.text.PWM_DisableADCTrigger) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearADCTriggerFlag) refers to pwm.o(.text.PWM_ClearADCTriggerFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetADCTriggerFlag) refers to pwm.o(.text.PWM_GetADCTriggerFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableFaultBrake) refers to pwm.o(.text.PWM_EnableFaultBrake) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableCapture) refers to pwm.o(.text.PWM_EnableCapture) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableCapture) refers to pwm.o(.text.PWM_DisableCapture) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableOutput) refers to pwm.o(.text.PWM_EnableOutput) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableOutput) refers to pwm.o(.text.PWM_DisableOutput) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableDeadZone) refers to pwm.o(.text.PWM_EnableDeadZone) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableDeadZone) refers to pwm.o(.text.PWM_DisableDeadZone) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableCaptureInt) refers to pwm.o(.text.PWM_EnableCaptureInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableCaptureInt) refers to pwm.o(.text.PWM_DisableCaptureInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearCaptureIntFlag) refers to pwm.o(.text.PWM_ClearCaptureIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetCaptureIntFlag) refers to pwm.o(.text.PWM_GetCaptureIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableDutyInt) refers to pwm.o(.text.PWM_EnableDutyInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableDutyInt) refers to pwm.o(.text.PWM_DisableDutyInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearDutyIntFlag) refers to pwm.o(.text.PWM_ClearDutyIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetDutyIntFlag) refers to pwm.o(.text.PWM_GetDutyIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableLoadMode) refers to pwm.o(.text.PWM_EnableLoadMode) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableLoadMode) refers to pwm.o(.text.PWM_DisableLoadMode) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableFaultBrakeInt) refers to pwm.o(.text.PWM_EnableFaultBrakeInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableFaultBrakeInt) refers to pwm.o(.text.PWM_DisableFaultBrakeInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearFaultBrakeIntFlag) refers to pwm.o(.text.PWM_ClearFaultBrakeIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetFaultBrakeIntFlag) refers to pwm.o(.text.PWM_GetFaultBrakeIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnablePeriodInt) refers to pwm.o(.text.PWM_EnablePeriodInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisablePeriodInt) refers to pwm.o(.text.PWM_DisablePeriodInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearPeriodIntFlag) refers to pwm.o(.text.PWM_ClearPeriodIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetPeriodIntFlag) refers to pwm.o(.text.PWM_GetPeriodIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableZeroInt) refers to pwm.o(.text.PWM_EnableZeroInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableZeroInt) refers to pwm.o(.text.PWM_DisableZeroInt) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearZeroIntFlag) refers to pwm.o(.text.PWM_ClearZeroIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetZeroIntFlag) refers to pwm.o(.text.PWM_GetZeroIntFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_SetClockSource) refers to pwm.o(.text.PWM_SetClockSource) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableBrakeNoiseFilter) refers to pwm.o(.text.PWM_EnableBrakeNoiseFilter) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableBrakeNoiseFilter) refers to pwm.o(.text.PWM_DisableBrakeNoiseFilter) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnableBrakePinInverse) refers to pwm.o(.text.PWM_EnableBrakePinInverse) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisableBrakePinInverse) refers to pwm.o(.text.PWM_DisableBrakePinInverse) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_SetBrakePinSource) refers to pwm.o(.text.PWM_SetBrakePinSource) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_GetWrapAroundFlag) refers to pwm.o(.text.PWM_GetWrapAroundFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_ClearWrapAroundFlag) refers to pwm.o(.text.PWM_ClearWrapAroundFlag) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_EnablePDMA) refers to pwm.o(.text.PWM_EnablePDMA) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_DisablePDMA) refers to pwm.o(.text.PWM_DisablePDMA) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ClearResetSrc) refers to sys.o(.text.SYS_ClearResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetBODStatus) refers to sys.o(.text.SYS_GetBODStatus) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetResetSrc) refers to sys.o(.text.SYS_GetResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_IsRegLocked) refers to sys.o(.text.SYS_IsRegLocked) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ReadPDID) refers to sys.o(.text.SYS_ReadPDID) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetChip) refers to sys.o(.text.SYS_ResetChip) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetCPU) refers to sys.o(.text.SYS_ResetCPU) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetModule) refers to sys.o(.text.SYS_ResetModule) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_EnableBOD) refers to sys.o(.text.SYS_EnableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_DisableBOD) refers to sys.o(.text.SYS_DisableBOD) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ClearIntFlag) refers to uart.o(.text.UART_ClearIntFlag) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Close) refers to uart.o(.text.UART_Close) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableFlowCtrl) refers to uart.o(.text.UART_DisableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableInt) refers to uart.o(.text.UART_DisableInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableFlowCtrl) refers to uart.o(.text.UART_EnableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableInt) refers to uart.o(.text.UART_EnableInt) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_Open) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    uart.o(.text.UART_Open) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to uart.o(.rodata.cst4) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Open) refers to uart.o(.text.UART_Open) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Read) refers to uart.o(.text.UART_Read) for [Anonymous Symbol]
    uart.o(.text.UART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_SetLine_Config) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_SetLine_Config) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    uart.o(.text.UART_SetLine_Config) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for [Anonymous Symbol]
    uart.o(.text.UART_SetLine_Config) refers to uart.o(.rodata.cst4) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetLine_Config) refers to uart.o(.text.UART_SetLine_Config) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetTimeoutCnt) refers to uart.o(.text.UART_SetTimeoutCnt) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    uart.o(.text.UART_SelectIrDAMode) refers to aeabi_sdivfast.o(.text_divfast) for __aeabi_uidiv
    uart.o(.text.UART_SelectIrDAMode) refers to uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to uart.o(.rodata.cst4) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectIrDAMode) refers to uart.o(.text.UART_SelectIrDAMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectRS485Mode) refers to uart.o(.text.UART_SelectRS485Mode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Write) refers to uart.o(.text.UART_Write) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectSingleWireMode) refers to uart.o(.text.UART_SelectSingleWireMode) for [Anonymous Symbol]
    puts.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts.o(.text) refers to retarget.o(.bss.__stdout) for __stdout
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_m031series.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to retarget.o(.text._ttywrch) for _ttywrch
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_m031series.o(.text), (0 bytes).
    Removing system_m031series.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_m031series.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.SYS_Init), (8 bytes).
    Removing main.o(.text.PWM_Init), (116 bytes).
    Removing main.o(.ARM.exidx.text.PWM_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM1_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.ARM.exidx.text.SH_Return), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.ProcessHardFault), (8 bytes).
    Removing retarget.o(.text.SendChar_ToUART), (80 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar_ToUART), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar), (8 bytes).
    Removing retarget.o(.text.GetChar), (44 bytes).
    Removing retarget.o(.ARM.exidx.text.GetChar), (8 bytes).
    Removing retarget.o(.text.kbhit), (16 bytes).
    Removing retarget.o(.ARM.exidx.text.kbhit), (8 bytes).
    Removing retarget.o(.text.IsDebugFifoEmpty), (16 bytes).
    Removing retarget.o(.ARM.exidx.text.IsDebugFifoEmpty), (8 bytes).
    Removing retarget.o(.text._ttywrch), (8 bytes).
    Removing retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (44 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text.ferror), (6 bytes).
    Removing retarget.o(.ARM.exidx.text.ferror), (8 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing clk.o(.text), (0 bytes).
    Removing clk.o(.text.CLK_DisableCKO), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableCKO), (8 bytes).
    Removing clk.o(.text.CLK_EnableCKO), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableCKO), (8 bytes).
    Removing clk.o(.text.CLK_PowerDown), (88 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_PowerDown), (8 bytes).
    Removing clk.o(.text.CLK_Idle), (32 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_Idle), (8 bytes).
    Removing clk.o(.text.CLK_GetHXTFreq), (24 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetLXTFreq), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetLXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK0Freq), (32 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK1Freq), (32 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLKFreq), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLKFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetCPUFreq), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetCPUFreq), (8 bytes).
    Removing clk.o(.text.CLK_SetCoreClock), (396 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetCoreClock), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockReady), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnablePLL), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetHCLK), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_SetSysTickClockSrc), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisableXtalRC), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableXtalRC), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_DisableModuleClock), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_DisablePLL), (128 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisablePLL), (8 bytes).
    Removing clk.o(.text.CLK_EnableSysTick), (56 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_DisableSysTick), (12 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableSysTick), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.text.PWM_ConfigCaptureChannel), (308 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ConfigCaptureChannel), (8 bytes).
    Removing pwm.o(.text.PWM_ConfigOutputChannel), (756 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ConfigOutputChannel), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_Start), (8 bytes).
    Removing pwm.o(.text.PWM_Stop), (72 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_Stop), (8 bytes).
    Removing pwm.o(.text.PWM_ForceStop), (96 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ForceStop), (8 bytes).
    Removing pwm.o(.text.PWM_EnableADCTrigger), (44 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableADCTrigger), (8 bytes).
    Removing pwm.o(.text.PWM_DisableADCTrigger), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableADCTrigger), (8 bytes).
    Removing pwm.o(.text.PWM_ClearADCTriggerFlag), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearADCTriggerFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetADCTriggerFlag), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetADCTriggerFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableFaultBrake), (616 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableFaultBrake), (8 bytes).
    Removing pwm.o(.text.PWM_EnableCapture), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableCapture), (8 bytes).
    Removing pwm.o(.text.PWM_DisableCapture), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableCapture), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableOutput), (8 bytes).
    Removing pwm.o(.text.PWM_DisableOutput), (10 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableOutput), (8 bytes).
    Removing pwm.o(.text.PWM_EnableDeadZone), (32 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableDeadZone), (8 bytes).
    Removing pwm.o(.text.PWM_DisableDeadZone), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableDeadZone), (8 bytes).
    Removing pwm.o(.text.PWM_EnableCaptureInt), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableCaptureInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableCaptureInt), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableCaptureInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearCaptureIntFlag), (10 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearCaptureIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetCaptureIntFlag), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetCaptureIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableDutyInt), (12 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableDutyInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableDutyInt), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableDutyInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearDutyIntFlag), (16 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearDutyIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetDutyIntFlag), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetDutyIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableLoadMode), (10 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableLoadMode), (8 bytes).
    Removing pwm.o(.text.PWM_DisableLoadMode), (10 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableLoadMode), (8 bytes).
    Removing pwm.o(.text.PWM_EnableFaultBrakeInt), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableFaultBrakeInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableFaultBrakeInt), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableFaultBrakeInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearFaultBrakeIntFlag), (10 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearFaultBrakeIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetFaultBrakeIntFlag), (16 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetFaultBrakeIntFlag), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnablePeriodInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisablePeriodInt), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisablePeriodInt), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearPeriodIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetPeriodIntFlag), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetPeriodIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnableZeroInt), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableZeroInt), (8 bytes).
    Removing pwm.o(.text.PWM_DisableZeroInt), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableZeroInt), (8 bytes).
    Removing pwm.o(.text.PWM_ClearZeroIntFlag), (12 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearZeroIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_GetZeroIntFlag), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetZeroIntFlag), (8 bytes).
    Removing pwm.o(.text.PWM_SetClockSource), (20 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_SetClockSource), (8 bytes).
    Removing pwm.o(.text.PWM_EnableBrakeNoiseFilter), (30 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableBrakeNoiseFilter), (8 bytes).
    Removing pwm.o(.text.PWM_DisableBrakeNoiseFilter), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableBrakeNoiseFilter), (8 bytes).
    Removing pwm.o(.text.PWM_EnableBrakePinInverse), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnableBrakePinInverse), (8 bytes).
    Removing pwm.o(.text.PWM_DisableBrakePinInverse), (18 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisableBrakePinInverse), (8 bytes).
    Removing pwm.o(.text.PWM_SetBrakePinSource), (26 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_SetBrakePinSource), (8 bytes).
    Removing pwm.o(.text.PWM_GetWrapAroundFlag), (16 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_GetWrapAroundFlag), (8 bytes).
    Removing pwm.o(.text.PWM_ClearWrapAroundFlag), (14 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_ClearWrapAroundFlag), (8 bytes).
    Removing pwm.o(.text.PWM_EnablePDMA), (40 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_EnablePDMA), (8 bytes).
    Removing pwm.o(.text.PWM_DisablePDMA), (22 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_DisablePDMA), (8 bytes).
    Removing pwm.o(.rodata.cst4), (4 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.SYS_ClearResetSrc), (12 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ClearResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_GetBODStatus), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetBODStatus), (8 bytes).
    Removing sys.o(.text.SYS_GetResetSrc), (12 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_IsRegLocked), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_IsRegLocked), (8 bytes).
    Removing sys.o(.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.text.SYS_ResetChip), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetChip), (8 bytes).
    Removing sys.o(.text.SYS_ResetCPU), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetCPU), (8 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetModule), (8 bytes).
    Removing sys.o(.text.SYS_EnableBOD), (40 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_EnableBOD), (8 bytes).
    Removing sys.o(.text.SYS_DisableBOD), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_DisableBOD), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.UART_ClearIntFlag), (70 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ClearIntFlag), (8 bytes).
    Removing uart.o(.text.UART_Close), (6 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Close), (8 bytes).
    Removing uart.o(.text.UART_DisableFlowCtrl), (12 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.text.UART_EnableFlowCtrl), (30 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.text.UART_Open), (388 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Open), (8 bytes).
    Removing uart.o(.text.UART_Read), (138 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Read), (8 bytes).
    Removing uart.o(.text.UART_SetLine_Config), (384 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetLine_Config), (8 bytes).
    Removing uart.o(.text.UART_SetTimeoutCnt), (22 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetTimeoutCnt), (8 bytes).
    Removing uart.o(.text.UART_SelectIrDAMode), (380 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectIrDAMode), (8 bytes).
    Removing uart.o(.text.UART_SelectRS485Mode), (32 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectRS485Mode), (8 bytes).
    Removing uart.o(.text.UART_Write), (138 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Write), (8 bytes).
    Removing uart.o(.text.UART_SelectSingleWireMode), (14 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectSingleWireMode), (8 bytes).
    Removing uart.o(.rodata..L__const.UART_SelectIrDAMode.u32ClkTbl), (24 bytes).
    Removing uart.o(.rodata.cst4), (4 bytes).

216 unused section(s) (total 6686 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\..\Library\Device\Nuvoton\M031\Source\ARM\startup_M031Series.s 0x00000000   Number         0  startup_m031series.o ABSOLUTE
    clk.c                                    0x00000000   Number         0  clk.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    pwm.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    system_M031Series.c                      0x00000000   Number         0  system_m031series.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_m031series.o(RESET)
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       84  __scatter.o(!!!scatter)
    !!handler_copy                           0x0000011c   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x00000138   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x0000013c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000158   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0000015a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0000015a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x0000015c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000015e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000015e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000160   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000160   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000160   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000166   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000166   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000016a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000016a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000172   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000174   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000174   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000178   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000180   Section      152  startup_m031series.o(.text)
    Default_Handler                          0x000001bf   Thumb Code     2  startup_m031series.o(.text)
    .text                                    0x00000218   Section        0  puts.o(.text)
    .text                                    0x00000244   Section        0  heapauxi.o(.text)
    .text                                    0x0000024a   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x00000288   Section        0  exit.o(.text)
    .text                                    0x00000298   Section        8  libspace.o(.text)
    .text                                    0x000002a0   Section        0  sys_exit.o(.text)
    .text                                    0x000002ac   Section        2  use_no_semi.o(.text)
    .text                                    0x000002ae   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000002b0   Section        0  clk.o(.text.CLK_EnableModuleClock)
    __arm_cp.18_0                            0x000002cc   Number         4  clk.o(.text.CLK_EnableModuleClock)
    __arm_cp.18_1                            0x000002d0   Number         4  clk.o(.text.CLK_EnableModuleClock)
    [Anonymous Symbol]                       0x000002d4   Section        0  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_0                            0x0000078c   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_1                            0x00000790   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_2                            0x00000794   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_3                            0x00000798   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_4                            0x0000079c   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_5                            0x000007a0   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_6                            0x000007a4   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_7                            0x000007a8   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_8                            0x000007ac   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_9                            0x000007b0   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_11                           0x000007b8   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_12                           0x000007bc   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_13                           0x000007c0   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_14                           0x000007c4   Number         4  clk.o(.text.CLK_EnablePLL)
    __arm_cp.12_15                           0x000007c8   Number         4  clk.o(.text.CLK_EnablePLL)
    [Anonymous Symbol]                       0x000007cc   Section        0  clk.o(.text.CLK_EnableXtalRC)
    __arm_cp.16_0                            0x000007d8   Number         4  clk.o(.text.CLK_EnableXtalRC)
    [Anonymous Symbol]                       0x000007dc   Section        0  clk.o(.text.CLK_SetHCLK)
    [Anonymous Symbol]                       0x00000874   Section        0  clk.o(.text.CLK_SetModuleClock)
    __arm_cp.14_0                            0x000008bc   Number         4  clk.o(.text.CLK_SetModuleClock)
    [Anonymous Symbol]                       0x000008e0   Section        0  clk.o(.text.CLK_WaitClockReady)
    __arm_cp.11_0                            0x00000938   Number         4  clk.o(.text.CLK_WaitClockReady)
    __arm_cp.11_2                            0x0000093c   Number         4  clk.o(.text.CLK_WaitClockReady)
    [Anonymous Symbol]                       0x00000940   Section        0  main.o(.text.PWM1_IRQHandler)
    __arm_cp.2_0                             0x00000980   Number         4  main.o(.text.PWM1_IRQHandler)
    __arm_cp.2_1                             0x00000984   Number         4  main.o(.text.PWM1_IRQHandler)
    __arm_cp.2_2                             0x00000988   Number         4  main.o(.text.PWM1_IRQHandler)
    [Anonymous Symbol]                       0x0000098c   Section        0  pwm.o(.text.PWM_ClearPeriodIntFlag)
    [Anonymous Symbol]                       0x0000099a   Section        0  pwm.o(.text.PWM_EnableOutput)
    [Anonymous Symbol]                       0x000009a4   Section        0  pwm.o(.text.PWM_EnablePeriodInt)
    [Anonymous Symbol]                       0x000009b8   Section        0  pwm.o(.text.PWM_Start)
    [Anonymous Symbol]                       0x00000a18   Section        0  retarget.o(.text.ProcessHardFault)
    __arm_cp.1_0                             0x00000a40   Number         4  retarget.o(.text.ProcessHardFault)
    __arm_cp.1_2                             0x00000a54   Number         4  retarget.o(.text.ProcessHardFault)
    [Anonymous Symbol]                       0x00000a58   Section        0  retarget.o(.text.SH_Return)
    [Anonymous Symbol]                       0x00000a5c   Section        0  main.o(.text.SYS_Init)
    __arm_cp.0_0                             0x00000ac4   Number         4  main.o(.text.SYS_Init)
    __arm_cp.0_1                             0x00000ac8   Number         4  main.o(.text.SYS_Init)
    __arm_cp.0_2                             0x00000acc   Number         4  main.o(.text.SYS_Init)
    __arm_cp.0_3                             0x00000ad0   Number         4  main.o(.text.SYS_Init)
    [Anonymous Symbol]                       0x00000ad4   Section        0  sys.o(.text.SYS_ResetModule)
    __arm_cp.7_0                             0x00000af4   Number         4  sys.o(.text.SYS_ResetModule)
    [Anonymous Symbol]                       0x00000af8   Section        0  retarget.o(.text.SendChar)
    __arm_cp.3_0                             0x00000b44   Number         4  retarget.o(.text.SendChar)
    [Anonymous Symbol]                       0x00000b48   Section        0  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_0                             0x00000bc0   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_1                             0x00000bc4   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_2                             0x00000bc8   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_3                             0x00000bcc   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_5                             0x00000bd4   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_6                             0x00000bd8   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_7                             0x00000bdc   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_8                             0x00000be0   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_9                             0x00000be4   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_10                            0x00000be8   Number         4  system_m031series.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00000bec   Section        0  system_m031series.o(.text.SystemInit)
    __arm_cp.1_1                             0x00000c40   Number         4  system_m031series.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000c44   Section        0  retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x00000c50   Section        0  main.o(.text.main)
    __arm_cp.3_0                             0x00000cec   Number         4  main.o(.text.main)
    __arm_cp.3_1                             0x00000cf0   Number         4  main.o(.text.main)
    __arm_cp.3_2                             0x00000cf4   Number         4  main.o(.text.main)
    __arm_cp.3_3                             0x00000cf8   Number         4  main.o(.text.main)
    __arm_cp.3_4                             0x00000cfc   Number         4  main.o(.text.main)
    __arm_cp.3_5                             0x00000d00   Number         4  main.o(.text.main)
    .text_divfast                            0x00000d04   Section      502  aeabi_sdivfast.o(.text_divfast)
    [Anonymous Symbol]                       0x00000efc   Section        0  clk.o(.rodata..L__const.CLK_DisableModuleClock.u32ClkTbl)
    g_ICE_Conneced                           0x2000000c   Data           4  retarget.o(.data.g_ICE_Conneced)
    [Anonymous Symbol]                       0x2000000c   Section        0  retarget.o(.data.g_ICE_Conneced)
    .bss                                     0x20000018   Section       96  libspace.o(.bss)
    Heap_Mem                                 0x200000d8   Data           0  startup_m031series.o(HEAP)
    Stack_Mem                                0x200000d8   Data         512  startup_m031series.o(STACK)
    HEAP                                     0x200000d8   Section        0  startup_m031series.o(HEAP)
    STACK                                    0x200000d8   Section      512  startup_m031series.o(STACK)
    __initial_sp                             0x200002d8   Data           0  startup_m031series.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_m031series.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    74  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x000000d3   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0000011d   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x00000139   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x0000013d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000159   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0000015b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x0000015d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000015f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000161   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000161   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000161   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000167   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000167   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0000016b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000016b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000173   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000175   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000175   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000179   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x00000181   Thumb Code    38  startup_m031series.o(.text)
    NMI_Handler                              0x000001a7   Thumb Code     2  startup_m031series.o(.text)
    HardFault_Handler                        0x000001a9   Thumb Code    16  startup_m031series.o(.text)
    SVC_Handler                              0x000001b9   Thumb Code     2  startup_m031series.o(.text)
    PendSV_Handler                           0x000001bb   Thumb Code     2  startup_m031series.o(.text)
    SysTick_Handler                          0x000001bd   Thumb Code     2  startup_m031series.o(.text)
    ACMP01_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    ADC_IRQHandler                           0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    BOD_IRQHandler                           0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    BPWM0_IRQHandler                         0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    BPWM1_IRQHandler                         0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    CKFAIL_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    EINT024_IRQHandler                       0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    EINT135_IRQHandler                       0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    GPABGH_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    GPCDEF_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    I2C0_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    I2C1_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    ISP_IRQHandler                           0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    PDMA_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    PWM0_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    PWRWU_IRQHandler                         0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    QSPI0_IRQHandler                         0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    RTC_IRQHandler                           0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    SPI0_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    TMR0_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    TMR1_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    TMR2_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    TMR3_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    UART02_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    UART13_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    UART46_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    UART57_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    USBD_IRQHandler                          0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    USCI01_IRQHandler                        0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    WDT_IRQHandler                           0x000001bf   Thumb Code     0  startup_m031series.o(.text)
    __user_initial_stackheap                 0x000001c1   Thumb Code     0  startup_m031series.o(.text)
    SH_DoCommand                             0x000001cd   Thumb Code    10  startup_m031series.o(.text)
    __PC                                     0x000001d7   Thumb Code     6  startup_m031series.o(.text)
    puts                                     0x00000219   Thumb Code    38  puts.o(.text)
    __use_two_region_memory                  0x00000245   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000247   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000249   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0000024b   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x00000289   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x00000299   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000299   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000299   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000002a1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000002ad   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000002ad   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000002af   Thumb Code     0  indicate_semi.o(.text)
    CLK_EnableModuleClock                    0x000002b1   Thumb Code    28  clk.o(.text.CLK_EnableModuleClock)
    CLK_EnablePLL                            0x000002d5   Thumb Code  1208  clk.o(.text.CLK_EnablePLL)
    CLK_EnableXtalRC                         0x000007cd   Thumb Code    12  clk.o(.text.CLK_EnableXtalRC)
    CLK_SetHCLK                              0x000007dd   Thumb Code   152  clk.o(.text.CLK_SetHCLK)
    CLK_SetModuleClock                       0x00000875   Thumb Code    72  clk.o(.text.CLK_SetModuleClock)
    CLK_WaitClockReady                       0x000008e1   Thumb Code    88  clk.o(.text.CLK_WaitClockReady)
    PWM1_IRQHandler                          0x00000941   Thumb Code    64  main.o(.text.PWM1_IRQHandler)
    PWM_ClearPeriodIntFlag                   0x0000098d   Thumb Code    14  pwm.o(.text.PWM_ClearPeriodIntFlag)
    PWM_EnableOutput                         0x0000099b   Thumb Code    10  pwm.o(.text.PWM_EnableOutput)
    PWM_EnablePeriodInt                      0x000009a5   Thumb Code    20  pwm.o(.text.PWM_EnablePeriodInt)
    PWM_Start                                0x000009b9   Thumb Code    96  pwm.o(.text.PWM_Start)
    ProcessHardFault                         0x00000a19   Thumb Code    40  retarget.o(.text.ProcessHardFault)
    SH_Return                                0x00000a59   Thumb Code     4  retarget.o(.text.SH_Return)
    SYS_Init                                 0x00000a5d   Thumb Code   104  main.o(.text.SYS_Init)
    SYS_ResetModule                          0x00000ad5   Thumb Code    32  sys.o(.text.SYS_ResetModule)
    SendChar                                 0x00000af9   Thumb Code    76  retarget.o(.text.SendChar)
    SystemCoreClockUpdate                    0x00000b49   Thumb Code   120  system_m031series.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00000bed   Thumb Code    84  system_m031series.o(.text.SystemInit)
    fputc                                    0x00000c45   Thumb Code    12  retarget.o(.text.fputc)
    main                                     0x00000c51   Thumb Code   156  main.o(.text.main)
    __aeabi_uidiv                            0x00000d05   Thumb Code    68  aeabi_sdivfast.o(.text_divfast)
    __aeabi_idiv                             0x00000d49   Thumb Code   434  aeabi_sdivfast.o(.text_divfast)
    gau32ClkSrcTbl                           0x00000f08   Data          32  system_m031series.o(.rodata.gau32ClkSrcTbl)
    Region$$Table$$Base                      0x00000f28   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000f48   Number         0  anon$$obj.o(Region$$Table)
    CyclesPerUs                              0x20000000   Data           4  system_m031series.o(.data.CyclesPerUs)
    PllClock                                 0x20000004   Data           4  system_m031series.o(.data.PllClock)
    SystemCoreClock                          0x20000008   Data           4  system_m031series.o(.data.SystemCoreClock)
    g_u8Forward                              0x20000010   Data           1  main.o(.data.g_u8Forward)
    __libspace_start                         0x20000018   Data          96  libspace.o(.bss)
    __stdout                                 0x20000078   Data          84  retarget.o(.bss.__stdout)
    __temporary_stack_top$libspace           0x20000078   Data           0  libspace.o(.bss)
    g_CLK_i32ErrCode                         0x200000cc   Data           4  clk.o(.bss.g_CLK_i32ErrCode)
    g_u32BreathingCount                      0x200000d0   Data           4  main.o(.bss.g_u32BreathingCount)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000181

  Load Region LR_1 (Base: 0x00000000, Size: 0x00000f5c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000f48, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO            3    RESET               startup_m031series.o
    0x000000c0   0x000000c0   0x00000008   Code   RO          317  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x00000054   Code   RO          490    !!!scatter          c_p.l(__scatter.o)
    0x0000011c   0x0000011c   0x0000001a   Code   RO          494    !!handler_copy      c_p.l(__scatter_copy.o)
    0x00000136   0x00000136   0x00000002   PAD
    0x00000138   0x00000138   0x00000002   Code   RO          491    !!handler_null      c_p.l(__scatter.o)
    0x0000013a   0x0000013a   0x00000002   PAD
    0x0000013c   0x0000013c   0x0000001c   Code   RO          496    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000158   0x00000158   0x00000002   Code   RO          355    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          369    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          371    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          373    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          376    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          378    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          380    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          383    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          385    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          387    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          389    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          391    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          393    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          395    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          397    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          399    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          401    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          403    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          407    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          409    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          411    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000000   Code   RO          413    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x0000015a   0x0000015a   0x00000002   Code   RO          414    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x0000015c   0x0000015c   0x00000002   Code   RO          445    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          473    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          475    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          478    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          481    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          483    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000000   Code   RO          486    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x0000015e   0x0000015e   0x00000002   Code   RO          487    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000160   0x00000160   0x00000000   Code   RO          319    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000160   0x00000160   0x00000000   Code   RO          325    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000160   0x00000160   0x00000006   Code   RO          337    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x00000166   0x00000166   0x00000000   Code   RO          327    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x00000166   0x00000166   0x00000004   Code   RO          328    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000016a   0x0000016a   0x00000000   Code   RO          330    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000016a   0x0000016a   0x00000008   Code   RO          331    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000172   0x00000172   0x00000002   Code   RO          360    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000174   0x00000174   0x00000000   Code   RO          420    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000174   0x00000174   0x00000004   Code   RO          421    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000178   0x00000178   0x00000006   Code   RO          422    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0000017e   0x0000017e   0x00000002   PAD
    0x00000180   0x00000180   0x00000098   Code   RO            4  * .text               startup_m031series.o
    0x00000218   0x00000218   0x0000002c   Code   RO          305    .text               c_p.l(puts.o)
    0x00000244   0x00000244   0x00000006   Code   RO          315    .text               c_p.l(heapauxi.o)
    0x0000024a   0x0000024a   0x0000003e   Code   RO          341    .text               c_p.l(sys_stackheap_outer.o)
    0x00000288   0x00000288   0x00000010   Code   RO          344    .text               c_p.l(exit.o)
    0x00000298   0x00000298   0x00000008   Code   RO          356    .text               c_p.l(libspace.o)
    0x000002a0   0x000002a0   0x0000000c   Code   RO          415    .text               c_p.l(sys_exit.o)
    0x000002ac   0x000002ac   0x00000002   Code   RO          434    .text               c_p.l(use_no_semi.o)
    0x000002ae   0x000002ae   0x00000000   Code   RO          436    .text               c_p.l(indicate_semi.o)
    0x000002ae   0x000002ae   0x00000002   PAD
    0x000002b0   0x000002b0   0x00000024   Code   RO          115    .text.CLK_EnableModuleClock  clk.o
    0x000002d4   0x000002d4   0x000004f8   Code   RO          103    .text.CLK_EnablePLL  clk.o
    0x000007cc   0x000007cc   0x00000010   Code   RO          111    .text.CLK_EnableXtalRC  clk.o
    0x000007dc   0x000007dc   0x00000098   Code   RO          105    .text.CLK_SetHCLK   clk.o
    0x00000874   0x00000874   0x0000006c   Code   RO          107    .text.CLK_SetModuleClock  clk.o
    0x000008e0   0x000008e0   0x00000060   Code   RO          101    .text.CLK_WaitClockReady  clk.o
    0x00000940   0x00000940   0x0000004c   Code   RO           31    .text.PWM1_IRQHandler  main.o
    0x0000098c   0x0000098c   0x0000000e   Code   RO          199    .text.PWM_ClearPeriodIntFlag  pwm.o
    0x0000099a   0x0000099a   0x0000000a   Code   RO          159    .text.PWM_EnableOutput  pwm.o
    0x000009a4   0x000009a4   0x00000014   Code   RO          195    .text.PWM_EnablePeriodInt  pwm.o
    0x000009b8   0x000009b8   0x00000060   Code   RO          139    .text.PWM_Start     pwm.o
    0x00000a18   0x00000a18   0x00000040   Code   RO           48    .text.ProcessHardFault  retarget.o
    0x00000a58   0x00000a58   0x00000004   Code   RO           46    .text.SH_Return     retarget.o
    0x00000a5c   0x00000a5c   0x00000078   Code   RO           27    .text.SYS_Init      main.o
    0x00000ad4   0x00000ad4   0x00000024   Code   RO          254    .text.SYS_ResetModule  sys.o
    0x00000af8   0x00000af8   0x00000050   Code   RO           52    .text.SendChar      retarget.o
    0x00000b48   0x00000b48   0x000000a4   Code   RO           11    .text.SystemCoreClockUpdate  system_m031series.o
    0x00000bec   0x00000bec   0x00000058   Code   RO           13    .text.SystemInit    system_m031series.o
    0x00000c44   0x00000c44   0x0000000c   Code   RO           62    .text.fputc         retarget.o
    0x00000c50   0x00000c50   0x000000b4   Code   RO           33    .text.main          main.o
    0x00000d04   0x00000d04   0x000001f6   Code   RO          308    .text_divfast       c_p.l(aeabi_sdivfast.o)
    0x00000efa   0x00000efa   0x00000002   PAD
    0x00000efc   0x00000efc   0x0000000c   Data   RO          126    .rodata..L__const.CLK_DisableModuleClock.u32ClkTbl  clk.o
    0x00000f08   0x00000f08   0x00000020   Data   RO           18    .rodata.gau32ClkSrcTbl  system_m031series.o
    0x00000f28   0x00000f28   0x00000020   Data   RO          489    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00000f48, Size: 0x00000014, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000f48   0x00000004   Data   RW           16    .data.CyclesPerUs   system_m031series.o
    0x20000004   0x00000f4c   0x00000004   Data   RW           17    .data.PllClock      system_m031series.o
    0x20000008   0x00000f50   0x00000004   Data   RW           15    .data.SystemCoreClock  system_m031series.o
    0x2000000c   0x00000f54   0x00000004   Data   RW           68    .data.g_ICE_Conneced  retarget.o
    0x20000010   0x00000f58   0x00000001   Data   RW           35    .data.g_u8Forward   main.o


    Execution Region ER_ZI (Exec base: 0x20000018, Load base: 0x00000f5c, Size: 0x000002c0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000018        -       0x00000060   Zero   RW          357    .bss                c_p.l(libspace.o)
    0x20000078        -       0x00000054   Zero   RW           69    .bss.__stdout       retarget.o
    0x200000cc        -       0x00000004   Zero   RW          125    .bss.g_CLK_i32ErrCode  clk.o
    0x200000d0        -       0x00000004   Zero   RW           36    .bss.g_u32BreathingCount  main.o
    0x200000d4   0x00000f5c   0x00000004   PAD
    0x200000d8        -       0x00000000   Zero   RW            2    HEAP                startup_m031series.o
    0x200000d8        -       0x00000200   Zero   RW            1    STACK               startup_m031series.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1680        136         12          0          4      14341   clk.o
       376         52          0          1          4       6177   main.o
       140          0          0          0          0      18401   pwm.o
       160         28          0          4         84       3765   retarget.o
       152         64        192          0        512        912   startup_m031series.o
        36          4          0          0          0       3489   sys.o
       252         48         32         12          0       4292   system_m031series.o

    ----------------------------------------------------------------------
      2796        332        268         20        608      51377   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          3          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        86         10          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
       502          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        44          6          0          0          0         68   puts.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       848         24          0          0         96        708   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       838         24          0          0         96        708   c_p.l

    ----------------------------------------------------------------------
       848         24          0          0         96        708   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3644        356        268         20        704      51865   Grand Totals
      3644        356        268         20        704      51865   ELF Image Totals
      3644        356        268         20          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3912 (   3.82kB)
    Total RW  Size (RW Data + ZI Data)               724 (   0.71kB)
    Total ROM Size (Code + RO Data + RW Data)       3932 (   3.84kB)

==============================================================================

